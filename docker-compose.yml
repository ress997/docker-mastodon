version: '3'
services:

  db:
    restart: always
    image: postgres:12-alpine
    shm_size: 256mb
    networks:
      - back
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:6-alpine
    networks:
      - back
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

  web:
#    build: app
    image: tootsuite/mastodon:v3.1.4
    restart: always
    environment:
      - GITHUB_REPOSITORY=ress997/docker-mastodon
      - TZ=Japan
#      - WEB_CONCURRENCY=1
#      - MAX_THREADS=5
    env_file:
      - .env.production
      - .env.ruby
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - front
      - back
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - db
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
#    build: app
    image: tootsuite/mastodon:v3.1.4
    restart: always
    environment:
      - TZ=Japan
    env_file: .env.production
    command: node ./streaming
    networks:
      - front
      - back
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - redis

#  flodgatt:
#    build: flodgatt
#    image: tootsuite/flodgatt
#    restart: always
#    environment:
#      - TZ=Japan
#    env_file: .env.production
#    command: /flodgatt
#    networks:
#      - front
#      - back
#    healthcheck:
#      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
#    ports:
#      - "127.0.0.1:4000:4000"
#    depends_on:
#      - db
#      - redis

  sidekiq:
#    build: app
    image: tootsuite/mastodon:v3.1.4
    restart: always
    environment:
      - TZ=Japan
    env_file:
      - .env.production
      - .env.ruby
    command: bundle exec sidekiq -c 15 -q default -q mailers -q push -q pull
    depends_on:
      - db
      - redis
    networks:
      - front
      - back
    volumes:
      - ./public/system:/mastodon/public/system

networks:
  front:
  back:
    internal: true
